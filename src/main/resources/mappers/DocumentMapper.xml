<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="DocumentMapper">

	<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결 -->
	<!-- 게시판 -->
	<resultMap id="boardMap"
		type="com.son.mypc.model.Document">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="docno" column="docno" />
		<result property="doc_type" column="doc_type" />
		<result property="subject" column="subject" />
		<result property="content" column="content" />
		<result property="reg_date" column="reg_date" />
		<result property="edit_date" column="edit_date" />
		<result property="hits" column="hits" />
		<result property="comment" column="comment" />
		<result property="membno" column="membno" />
		<result property="user_id" column="user_id" />
	</resultMap>
	<!-- 문의 -->
	<resultMap id="inquiryMap"
		type="com.son.mypc.model.Document">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="docno" column="docno" />
		<result property="doc_type" column="doc_type" />
		<result property="subject" column="subject" />
		<result property="content" column="content" />
		<result property="reg_date" column="reg_date" />
		<result property="replied" column="replied" />
		<result property="membno" column="membno" />
		<result property="user_id" column="user_id" />
		<result property="email" column="email" />
		<result property="user_id" column="user_id" />
	</resultMap>

	<!-- 단일행 조회를 위한 기능 정의 -->
	<!-- 게시판 -->
	<select id="selectBoardItem"
		parameterType="com.son.mypc.model.Document" resultMap="boardMap">
		SELECT
		docno, doc_type, subject, content, d.reg_date, edit_date, hits, comment,
		user_id, d.membno
		FROM document d INNER JOIN mypc.member m ON
		d.membno=m.membno WHERE docno=#{docno}
	</select>
	<!-- 문의 -->
	<select id="selectInquiryItem"
		parameterType="com.son.mypc.model.Document"
		resultMap="inquiryMap">
		SELECT
		docno, doc_type, subject, content, d.reg_date,
		replied, user_id, email, d.membno
		FROM document d INNER JOIN
		mypc.member m ON d.membno=m.membno WHERE docno=#{docno}
	</select>

	<!-- 다중행 조회를 위한 기능 정의 -->
	<!-- 게시판 -->
	<select id="selectBoardList"
		parameterType="com.son.mypc.model.Document" resultMap="boardMap">
		SELECT docno, doc_type, subject, content, d.reg_date, edit_date, hits, comment,
		m.membno, user_id FROM document d INNER JOIN mypc.member m ON
		d.membno=m.membno

		<where>
			<if test="true">
				doc_type='b'
			</if>
			<if test="subject != null and subject != ''">
				<if test="user_id == null or user_id ==''">
					AND d.membno != 1 AND subject LIKE concat('%',
					#{subject}, '%')
				</if>
			</if>

			<if test="user_id != null and user_id != ''">
				<if test="subject == null or subject ==''">
					AND d.membno != 1 AND user_id LIKE concat('%',
					#{user_id}, '%')
				</if>
			</if>
			<if
				test="user_id != null and user_id != '' and subject !=null and subject !=''">
				AND (subject LIKE concat('%', #{subject}, '%') OR user_id LIKE
				concat('%', #{user_id}, '%')) AND d.membno != 1
			</if>
		</where>

		ORDER BY docno DESC

		<if test="listCount > 0">
			LIMIT #{offset}, #{listCount}
		</if>
	</select>
	<!-- 문의 -->
	<select id="selectInquiryList"
		parameterType="com.son.mypc.model.Document"
		resultMap="inquiryMap">
		SELECT docno, doc_type, subject, content, d.reg_date, replied, email,
		m.user_id, d.membno
		FROM document d INNER JOIN mypc.member m ON
		d.membno=m.membno

		<where>
			<if test="true">
				doc_type='i'
			</if>
			<if test="replied != null and replied != ''">
				AND replied = #{replied} AND d.membno != 1
			</if>
			<if test="user_id != null and user_id != ''">
				AND user_id LIKE concat('%', #{user_id}, '%') AND
				d.membno != 1
			</if>
		</where>

		ORDER BY docno DESC

		<if test="listCount > 0">
			LIMIT #{offset}, #{listCount}
		</if>
	</select>

	<!-- 데이터 저장을 위한 기능 정의 -->
	<!-- 게시판 -->
	<insert id="insertBoardItem"
		parameterType="com.son.mypc.model.Document"
		useGeneratedKeys="true" keyProperty="docno">
		INSERT INTO document (doc_type,
		subject, content, reg_date, hits, membno) VALUES
		(#{doc_type},
		#{subject}, #{content}, #{reg_date}, #{hits}, #{membno})
	</insert>
	<!-- 문의 -->
	<insert id="insertInquiryItem"
		parameterType="com.son.mypc.model.Document"
		useGeneratedKeys="true" keyProperty="docno">
		INSERT INTO document (doc_type,
		subject, content, reg_date, replied, membno) VALUES
		(#{doc_type},
		#{subject}, #{content}, #{reg_date}, #{replied}, #{membno})
	</insert>

	<!-- 데이터 갱신을 위한 기능 정의 -->
	<!-- 게시판 -->
	<update id="updateBoardItem"
		parameterType="com.son.mypc.model.Document">
		UPDATE document SET subject=#{subject},
		content=#{content}, edit_date=#{edit_date} WHERE docno=#{docno};
	</update>
	<!-- 게시판 조회수 -->
	<update id="updateBoardHits"
		parameterType="com.son.mypc.model.Document">
		UPDATE document SET hits=#{hits} WHERE docno=#{docno};
	</update>
	<!-- 문의 -->
	<update id="updateInquiryItem"
		parameterType="com.son.mypc.model.Document">
		UPDATE document SET replied=#{replied} WHERE
		docno=#{docno};
	</update>
	<!-- 덧글 작성 시 덧글 조회 수 증가 -->
	<update id="updateBoardComment"
		parameterType="com.son.mypc.model.Document">
		UPDATE document SET comment=#{comment} WHERE
		docno=#{docno};
	</update>
	<!-- 게시글을 참조하는 회원 데이터 참조 해제 -->
	<update id="unsetDocument"
		parameterType="com.son.mypc.model.Document">
		UPDATE document SET membno=1 WHERE membno=#{membno}
	</update>

	<!-- 데이터 삭제를 위한 기능 정의 -->
	<delete id="deleteBoardItem"
		parameterType="com.son.mypc.model.Document">
		DELETE FROM document WHERE docno=#{docno};
	</delete>

	<!-- 데이터 수 조회를 위한 기능 정의 -->
	<!-- 게시판 -->
	<select id="selectBoardCount"
		parameterType="com.son.mypc.model.Document" resultType="int">
		SELECT COUNT(*) FROM document d INNER JOIN mypc.member m ON
		d.membno=m.membno

		<where>
			<if test="true">
				doc_type='b'
			</if>
			<if test="subject != null and subject != ''">
				<if test="user_id == null or user_id ==''">
					AND d.membno != 1 AND subject LIKE concat('%',
					#{subject}, '%')
				</if>
			</if>

			<if test="user_id != null and user_id != ''">
				<if test="subject == null or subject ==''">
					AND d.membno != 1 AND user_id LIKE concat('%',
					#{user_id}, '%')
				</if>
			</if>
			<if
				test="user_id != null and user_id != '' and subject !=null and subject !=''">
				AND (subject LIKE concat('%', #{subject}, '%') OR user_id LIKE
				concat('%', #{user_id}, '%')) AND d.membno != 1
			</if>
		</where>

	</select>
	<!-- 문의 -->
	<select id="selectInquiryCount"
		parameterType="com.son.mypc.model.Document" resultType="int">
		SELECT COUNT(*) FROM document d INNER JOIN mypc.member m ON
		d.membno=m.membno

		<where>
			<if test="true">
				doc_type='i'
			</if>
			<if test="replied != null and replied != ''">
				AND replied = #{replied} AND d.membno != 1
			</if>
			<if test="user_id != null and user_id != ''">
				AND user_id LIKE concat('%', #{user_id}, '%') AND
				d.membno != 1
			</if>
		</where>

	</select>

</mapper>